:root {
  --verdeLibro: #adf9b8;
  --greenValid: #adf9b8;
  --failedColor: #cb4e1f66;
  --failedInLibrary: #eab8a5;
  --passInLibrary: #b6f3bf;
  --roadColor: #da0037;
  --warn: #ffb11f;

  /* boton secundario */
  --btnSecundarybg: #d8dce0;
  /* color de fondo general */
  /*  #f3eff6; */
  /* #f7fbfc; */
  --background: #f7fbfc;
  --blanco: #ffff;
  --grayContentButton: #646363;
  /* escala desde gris a azul oscuro */
  --gris: #f5f7f8;
  --grisMedio: #ababab;
  --grisAzulado: #e9f8f9;
  --blueSkip: #b3daf1;
  --blueSkip2: #bdebf6;
  --azulAgregado: #91c2d2;
  --grisAzuladoOscuro: #87c7d6;
  --azulClaro: #0aa1dd;
  --azulMedio: #217e9d;
  --azulOscuro: #076382;

  --rojo: #f1604d;
  --amarrillo: #f9d949;
  --linealProgressColor: var(--verdeLibro);

  --seletsColor: var(--gris);
  --inputsbr: var(--azulMedio);
  --buttonkeyColorh: rgba(172, 186, 186, 0.8);
  --keyActive: rgba(172, 186, 186, 0.8);
  /* cap 0 interval */
  --disabledGraphColor: #eeeeee;

  /* reset */
  --resetColor: var(--azulClaro);
  /* back o return */
  --backColor: var(--azulClaro);
  --gray-dark: #343a40;
  /* usado para lios titulos  */
  --borderBaseColor: #000000;
  --colorRanking: #134761;
  --azulRaiting: #2985a2;
  --azulClaroRaiting: #217e9d3b;
  --UpRaiting: #217e9d9b;
}
.feedback {
  --normal: #87c7d6;
  --normal-shadow: #225068;
  --normal-shadow-top: #96969c;
  --normal-mouth: #134761;
  --normal-eye: #134761;
  --active: #f8da69;
  --active-shadow: #f4b555;
  --active-shadow-top: #74a5e1;
  /* --active-mouth: #f05136; */
  --active-eye: #313036;
  --active-tear: #76b5e7;
  --active-shadow-angry: #e94f1d;
  --hover: #96969c;
  --hover-shadow-top: #282734;
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
}

.grid {
  display: grid;
  justify-content: center;
}
.flex {
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
}
/*Raiting */
.container {
  grid-template-rows: auto 1fr;
  width: 380px;
  height: 480px;
  border: 10px solid var(--azulOscuro);
  border-radius: 20px;
  background: var(--grisAzulado);
  grid-row-gap: 20px;
  align-items: center;
  align-content: center;
}
.titlePag {
  display: flex;
  justify-content: center;
  font-family: 'Lilita One', sans-serif;
  color: var(--blanco);
  border-radius: 20px 20px 1.5rem 1.5rem;
  font-size: 35px;
  height: 120px;
  width: 380px;
  background-color: var(--azulOscuro);
  gap: 10px;
}

.contentUtils {
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
}
.imagenIcon {
  background: url(../../assets/utils/ico.svg);
  background-size: cover;
  width: 80px;

  height: 80px;
}

.ratingForm {
  height: 260px;
  align-items: center;
  grid-template-rows: auto 1fr;
}
.contentQuestion {
  display: flex;
  flex-direction: column;
  gap: 40px;
}
.pOpinion {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}

.contentSmiley {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 30px;
  font-family: 'Lilita One';
  color: var(--azulMedio);
  gap: 15px;
}
.containerBtnH2 {
  flex-direction: column;
  gap: 10px;
  font-size: 18px;
  font-family: 'Lilita One';
  color: var(--azulMedio);
}
.textChangeInput {
  opacity: 0;
  font-weight: 500;
  padding: 5px 10px;
  border-radius: 25px;
  letter-spacing: 1px;
}
.hoverLabel {
  opacity: 1;
  color: #076382;
}

.hoverLabel:hover + .textChangeInput {
  background-color: #da0037;
  color: red; /* Cambia el color del texto al pasar el cursor */
  font-weight: bold; /* Cambia el peso de la fuente */
}

.btn-enviar {
  width: 120px;
  height: 60px;
  background-color: var(----grisAzulado);
  border: 6px solid;
  border-radius: 25px;
  font-family: 'Lilita One';
  color: var(--azulMedio);
  font-size: 25px;
  margin: 0;
  transition: ease-in-out 0.2s;
}
.buttonHover {
  cursor: pointer;
  outline: none;
}
.buttonHover:hover {
  background-color: var(--azulMedio);
  border-color: var(--azulMedio);
  color: #fff;
}
.buttonHover:active {
  opacity: 0.8;
  box-shadow: 1px #000;
}
.span {
  display: flex;
  flex-direction: row;
  padding: 18px;
  gap: 30px;
}
.contentWavesTop {
  background-size: cover;
}

/*Responsive*/
@media only screen and (min-width: 280px) and (max-width: 450px) {
  /*Movil Y Table*/
  .container {
    width: 280px;
    /* margin: 20px; */
    height: 440px;
  }
  .titlePag {
    height: 120px;
    width: 280px;
    font-size: 25px;
  }
  .textChangeInput {
    font-size: 24px;
  }
  .ratingForm {
    height: 230px;
  }
  .span {
    gap: 15px;
  }
  .contentSmiley {
    font-size: 25px;
    font-family: 'Lilita One';
    gap: 15px;
  }
  .imagenIcon {
    width: 70px;
    height: 70px;
  }
  .btn-enviar {
    width: 100px;
    height: 50px;
    font-size: 20px;
  }
}

@media only screen and (min-width: 450px) and (max-width: 720px) {
  /*Movil y Table*/
  .container {
    width: 350px;
    height: 440px;
  }
  .titlePag {
    height: 120px;
    width: 350px;
    font-size: 32px;
  }
  .ratingForm {
    height: 230px;
  }
  .span {
    gap: 20px;
  }
  .contentSmiley {
    font-size: 26px;
    font-family: 'Lilita One';
    gap: 15px;
  }
  .imagenIcon {
    width: 75px;
    height: 75px;
  }
  .btn-enviar {
    width: 110px;
    height: 55px;
    font-size: 22px;
  }
}

@media only screen and (min-width: 720px) and (max-width: 1080px) {
  /* Table y PC*/
}

@media only screen and (min-width: 1080px) {
  /*Table y PC*/
}
/* emojis con caras moviles */

.feedback label {
  position: relative;
  transition: transform 0.4s;
  cursor: pointer;
}
.feedback label:not(:last-child) {
  margin-right: 5px;
}
.feedback label input {
  appearance: none;
  outline: none;
  border: none;
  display: block;
  position: absolute;
  width: 40px;
  height: 40px;
  left: 0;
  top: 0;
  margin: 0;
  padding: 0;
  border-radius: 50%;
  background: var(--sb, var(--normal));
  box-shadow:
    inset 3px -3px 4px var(--sh, var(--normal-shadow)),
    inset -1px 1px 2px var(--sht, var(--normal-shadow-top));
  transition:
    background 0.4s,
    box-shadow 0.4s,
    transform 0.3s;
  -webkit-tap-highlight-color: transparent;
}
.feedback label div {
  /*ojoo*/
  width: 30px;
  height: 40px;
  gap: 10px;
  position: relative;
  transform: perspective(240px) translateZ(4px);
}
.feedback label div svg,
.feedback label div:before,
.feedback label div:after {
  display: block;
  position: absolute;
  left: var(--l, 9px);
  top: var(--t, 13px);
  width: var(--w, 8px);
  height: var(--h, 1px);
  transform: rotate(var(--r, 0deg)) scale(var(--sc, 1)) translateZ(0);
}
.feedback label div svg {
  fill: none;
  stroke: var(--s);
  stroke-width: 1.5px;
  stroke-linecap: round;
  stroke-linejoin: round;
  transition: stroke 0.4s;
}
.feedback label div svg.eye {
  --s: var(--e, var(--normal-eye));
  --t: 17px;
  --w: 7px;
  --h: 4px;
}
.feedback label div svg.eye.right {
  --l: 23px;
}
.feedback label div svg.mouth {
  --s: var(--m, var(--normal-mouth));
  --l: 11px;
  --t: 23px;
  --w: 18px;
  --h: 7px;
}
.feedback label div:before,
.feedback label div:after {
  content: '';
  z-index: var(--zi, 1);
  border-radius: var(--br, 1px);
  background: var(--b, var(--e, var(--normal-eye)));
  transition: background 0.4s;
}
.feedback label.angry {
  --step-1-rx: -24deg;
  --step-1-ry: 20deg;
  --step-2-rx: -24deg;
  --step-2-ry: -20deg;
}
.feedback label.angry div:before {
  --r: 20deg;
}
.feedback label.angry div:after {
  --l: 23px;
  --r: -20deg;
}
.feedback label.angry div svg.eye {
  stroke-dasharray: 4.55;
  stroke-dashoffset: 8.15;
}
.feedback label.angry input:checked {
  animation: angry 1s linear;
  opacity: 1;
}
.feedback label.angry input:checked + div:before {
  --middle-y: -2px;
  --middle-r: 22deg;
  animation: toggle 0.8s linear forwards;
}
.feedback label.angry input:checked + div:after {
  --middle-y: 1px;
  --middle-r: -18deg;
  animation: toggle 0.8s linear forwards;
}
.feedback label.sad {
  --step-1-rx: 20deg;
  --step-1-ry: -12deg;
  --step-2-rx: -18deg;
  --step-2-ry: 14deg;
}
.feedback label.sad div:before,
.feedback label.sad div:after {
  --b: var(--active-tear);
  --sc: 0;
  --w: 5px;
  --h: 5px;
  --t: 15px;
  --br: 50%;
}
.feedback label.sad div:after {
  --l: 25px;
}
.feedback label.sad div svg.eye {
  --t: 16px;
}
.feedback label.sad div svg.mouth {
  --t: 24px;
  stroke-dasharray: 9.5;
  stroke-dashoffset: 33.25;
}
.feedback label.sad input:checked + div:before,
.feedback label.sad input:checked + div:after {
  animation: tear 0.6s linear forwards;
}
.feedback label.ok {
  --step-1-rx: 4deg;
  --step-1-ry: -22deg;
  --step-1-rz: 6deg;
  --step-2-rx: 4deg;
  --step-2-ry: 22deg;
  --step-2-rz: -6deg;
}
.feedback label.ok div:before {
  --l: 12px;
  --t: 17px;
  --h: 4px;
  --w: 4px;
  --br: 50%;
  box-shadow: 12px 0 0 var(--e, var(--normal-eye));
}
.feedback label.ok div:after {
  --l: 13px;
  --t: 26px;
  --w: 14px;
  --h: 2px;
  --br: 1px;
  --b: var(--m, var(--normal-mouth));
}
.feedback label.ok input:checked + div:before {
  --middle-s-y: 0.35;
  animation: toggle 0.2s linear forwards;
}
.feedback label.ok input:checked + div:after {
  --middle-s-x: 0.5;
  animation: toggle 0.7s linear forwards;
}
.feedback label.good {
  --step-1-rx: -14deg;
  --step-1-rz: 10deg;
  --step-2-rx: 10deg;
  --step-2-rz: -8deg;
}
.feedback label.good div:before {
  --b: var(--m, var(--normal-mouth));
  --w: 5px;
  --h: 5px;
  --br: 50%;
  --t: 22px;
  --zi: 0;
  opacity: 0.5;
  box-shadow: 16px 0 0 var(--b);
  filter: blur(2px);
}
.feedback label.good div:after {
  --sc: 0;
}
.feedback label.good div svg.eye {
  --t: 15px;
  --sc: -1;
  stroke-dasharray: 4.55;
  stroke-dashoffset: 8.15;
}
.feedback label.good div svg.mouth {
  --t: 22px;
  --sc: -1;
  stroke-dasharray: 13.3;
  stroke-dashoffset: 23.75;
}
.feedback label.good input:checked + div svg.mouth {
  --middle-y: 1px;
  --middle-s: -1;
  animation: toggle 0.8s linear forwards;
}
.feedback label.happy div {
  --step-1-rx: 18deg;
  --step-1-ry: 24deg;
  --step-2-rx: 18deg;
  --step-2-ry: -24deg;
}
.feedback label.happy div:before {
  --sc: 0;
}
.feedback label.happy div:after {
  --b: var(--m, var(--normal-mouth));
  --l: 11px;
  --t: 23px;
  --w: 18px;
  --h: 8px;
  --br: 0 0 8px 8px;
}
.feedback label.happy div svg.eye {
  --t: 14px;
  --sc: -1;
}
.feedback label.happy input:checked + div:after {
  --middle-s-x: 0.95;
  --middle-s-y: 0.75;
  animation: toggle 0.8s linear forwards;
}
.feedback label input:checked {
  --sb: var(--active);
  --sh: var(--active-shadow);
  --sht: var(--active-shadow-top);
}
.feedback label input:checked + div {
  --m: var(--active-mouth);
  --e: var(--active-eye);
  animation: shake 0.8s linear forwards;
}
.feedback label input:not(:checked):hover {
  --sb: var(--hover);
  --sht: var(--hover-shadow-top);
}
.feedback label input:not(:checked):active {
  transform: scale(0.925);
}
.feedback label input:not(:checked):active + div {
  transform: scale(0.925);
}
.feedback label:hover {
  transform: scale(1.08);
}
@keyframes shake {
  30% {
    transform: perspective(240px) rotateX(var(--step-1-rx, 0deg))
      rotateY(var(--step-1-ry, 0deg)) rotateZ(var(--step-1-rz, 0deg))
      translateZ(10px);
  }
  60% {
    transform: perspective(240px) rotateX(var(--step-2-rx, 0deg))
      rotateY(var(--step-2-ry, 0deg)) rotateZ(var(--step-2-rz, 0deg))
      translateZ(10px);
  }
  100% {
    transform: perspective(240px) translateZ(4px);
  }
}
@keyframes tear {
  0% {
    opacity: 0;
    transform: translateY(-2px) scale(0) translateZ(0);
  }
  50% {
    transform: translateY(12px) scale(0.6, 1.2) translateZ(0);
  }
  20%,
  80% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateY(24px) translateX(4px) rotateZ(-30deg) scale(0.7, 1.1)
      translateZ(0);
  }
}
@keyframes toggle {
  50% {
    transform: translateY(var(--middle-y, 0))
      scale(
        var(--middle-s-x, var(--middle-s, 1)),
        var(--middle-s-y, var(--middle-s, 1))
      )
      rotate(var(--middle-r, 0deg));
  }
}
@keyframes angry {
  40% {
    background: var(--active-shadow);
  }
  45% {
    box-shadow:
      inset 3px -3px 4px var(--active-shadow),
      inset 0 8px 10px var(--active-shadow-angry);
  }
}
