const defBoards = {
  board_0: {
    artifact: 'artifact_1',
    style: {
      reflectionAxie: {
        B: {
          strokeWidth: 1,
          strokeColor: 'gray',
          points: [
            [-18, -18],
            [18, 18],
          ],
        },
        X: {
          points: [[-20, 0], [20, 0],
          ]
        },
        Y: {
          points: [[0, -20], [0, 20]]
        }
      },
      grid: true,
      maxHeight: 300,
      maxWidth: 300,
      boundingbox: [-5, 5, 5, -5],
      axis: [false, true, true],

      valueAxis: {
        yd: [
          [0, 0],
          [0, 1],
        ] /*dirección del eje y*/,

        xd: [
          [0, 0],
          [1, 0],
        ],
        colory: '#000000',
        colorx: '#000000',
      },
    },
    curves: [



      {
        typeCurve: 'curve',
        strokeWidth: 1,

        flex: 1,
        points: [
          [-6, 0.27941549819892586],
          [-5.8, 0.46460217941375737],
          [-5.6, 0.6312666378723216],
          [-5.3999999999999995, 0.7727644875559877],
          [-5.199999999999999, 0.8834546557201536],


          [-4.999999999999999, 0.9589242746631387],
          [-4.799999999999999, 0.9961646088358408],
          [-4.599999999999999, 0.9936910036334643],
          [-4.399999999999999, 0.9516020738895156],

          [-4.199999999999998, 0.8715757724135873],



          [-3.9999999999999982, 0.7568024953079271],
          [-3.799999999999998, 0.6118578909427175],
          [-3.599999999999998, 0.44252044329485046],



          [-3.3999999999999977, 0.2555411020268291],


          [-3.1999999999999975, 0.05837414342757743], [-2.9999999999999973, -0.14112000805986985], [-2.799999999999997, -0.3349881501559076], [-2.599999999999997, -0.5155013718214668], [-2.399999999999997, -0.6754631805511533], [-2.1999999999999966, -0.8084964038195922], [-1.9999999999999967, -0.909297426825683], [-1.7999999999999967, -0.9738476308781959], [-1.5999999999999968, -0.9995736030415052], [-1.3999999999999968, -0.9854497299884596], [-1.1999999999999968, -0.9320390859672252], [-0.9999999999999969, -0.8414709848078948], [-0.7999999999999969, -0.7173560908995207], [-0.599999999999997, -0.5646424733950328], [-0.39999999999999697, -0.3894183423086477], [-0.19999999999999696, -0.19866933079505825], [3.0531133177191805e-15, 3.0531133177191805e-15], [0.20000000000000306, 0.19866933079506421], [0.4000000000000031, 0.3894183423086533], [0.6000000000000031, 0.5646424733950379], [0.8000000000000032, 0.717356090899525], [1.000000000000003, 0.8414709848078982], [1.200000000000003, 0.9320390859672275], [1.400000000000003, 0.9854497299884607], [1.600000000000003, 0.9995736030415051], [1.800000000000003, 0.9738476308781945], [2.000000000000003, 0.9092974268256804], [2.2000000000000033, 0.8084964038195882], [2.4000000000000035, 0.6754631805511484], [2.6000000000000036, 0.5155013718214612], [2.800000000000004, 0.33498815015590133], [3.000000000000004, 0.14112000805986327], [3.200000000000004, -0.058374143427584076], [3.4000000000000044, -0.25554110202683555],
          [3.6000000000000045, -0.44252044329485646],


          [3.8000000000000047, -0.6118578909427228], [4.000000000000004, -0.7568024953079312], [4.200000000000005, -0.8715757724135903],
          [4.400000000000005, -0.9516020738895175],
          [4.600000000000005, -0.993691003633465],
          [4.800000000000005, -0.9961646088358402],
          [5.000000000000005, -0.958924274663137],
          [5.2000000000000055, -0.8834546557201507],
          [5.400000000000006, -0.7727644875559837],
          [5.600000000000006, -0.6312666378723167],
          [5.800000000000006, -0.46460217941375187]


        ],
      },

      {
        typeCurve: 'finishCurve',
        flex: 1,
        strokeWidth: 1,

        points: [
          [-6, 0.5365729180004349], [-5.8, 0.8228285949687089], [-5.6, 0.9791777291513174], [-5.3999999999999995, 0.9809362300664912], [-5.199999999999999, 0.8278264690856527], [-4.999999999999999, 0.5440211108893683], [-4.799999999999999, 0.17432678122297787], [-4.599999999999999, -0.2228899141002494], [-4.399999999999999, -0.5849171928917646], [-4.199999999999998, -0.8545989080882823], [-3.9999999999999982, -0.9893582466233823], [-3.799999999999998, -0.9679196720314854], [-3.599999999999998, -0.7936678638491504], [-3.3999999999999977, -0.49411335113860433], [-3.1999999999999975, -0.11654920485048835], [-2.9999999999999973, 0.27941549819893097], [-2.799999999999997, 0.6312666378723257], [-2.599999999999997, 0.8834546557201561], [-2.399999999999997, 0.9961646088358412], [-2.1999999999999966, 0.9516020738895139], [-1.9999999999999967, 0.7568024953079239], [-1.7999999999999967, 0.44252044329484647], [-1.5999999999999968, 0.05837414342757344], [-1.3999999999999968, -0.33498815015591094], [-1.1999999999999968, -0.6754631805511556], [-0.9999999999999969, -0.9092974268256843], [-0.7999999999999969, -0.9995736030415053], [-0.599999999999997, -0.9320390859672242], [-0.39999999999999697, -0.7173560908995186], [-0.19999999999999696, -0.3894183423086449], [3.0531133177191805e-15, 6.106226635438361e-15], [0.20000000000000306, 0.38941834230865613], [0.4000000000000031, 0.717356090899527], [0.6000000000000031, 0.9320390859672286], [0.8000000000000032, 0.999573603041505], [1.000000000000003, 0.9092974268256792], [1.200000000000003, 0.6754631805511464], [1.400000000000003, 0.3349881501558992], [1.600000000000003, -0.05837414342758585], [1.800000000000003, -0.4425204432948576], [2.000000000000003, -0.7568024953079323], [2.2000000000000033, -0.951602073889518], [2.4000000000000035, -0.99616460883584], [2.6000000000000036, -0.8834546557201498], [2.800000000000004, -0.6312666378723154], [3.000000000000004, -0.2794154981989182], [3.200000000000004, 0.11654920485050158], [3.4000000000000044, 0.4941133511386159], [3.6000000000000045, 0.7936678638491586], [3.8000000000000047, 0.9679196720314888], [4.000000000000004, 0.9893582466233805], [4.200000000000005, 0.8545989080882759], [4.400000000000005, 0.5849171928917545], [4.600000000000005, 0.22288991410023726], [4.800000000000005, -0.17432678122299014], [5.000000000000005, -0.5440211108893788], [5.2000000000000055, -0.8278264690856596], [5.400000000000006, -0.9809362300664937], [5.600000000000006, -0.9791777291513148], [5.800000000000006, -0.8228285949687018],
        ],
      },


      {
        typeCurve: 'curve',
        strokeWidth: 1,

        flex: 1,
        points: [
          [5, 10],
          [-5, -10]
        ]
      }
    ],

    points: [
      { x: -2, y: 0, visible: true, interactive: true }, // REVISAR
      { x: -1.4, y: 0, visible: true, interactive: true },
      { x: -1, y: 0, visible: true, interactive: true },
      { x: 0, y: 0, visible: true, interactive: true },
      { x: 1, y: 0, visible: true, interactive: true },
      { x: 1.5, y: 0, visible: true, interactive: true },
      { x: 1.6, y: 0, visible: true, interactive: true },

      { x: 2, y: 0, visible: true, interactive: true },

    ],
    texts: [

      { x: -5, y: 1, text: '•', style: { fontSize: 30 } },
      { x: -4.80, y: 1, text: '•', style: { fontSize: 30 } },
      { x: -4.60, y: 0.99, text: '•', style: { fontSize: 30 } },


      { x: 1, y: 3, text: '2()', style: { fontSize: 16 } },
      { x: 2.5, y: 1, text: 'Sin()', style: { fontSize: 16 } },

      { x: 0.7, y: -0.50, text: 'x', style: { fontSize: 16 } },

      { x: 4.40, y: -1, text: '•', style: { fontSize: 30 } },
      { x: 4.80, y: -1, text: '•', style: { fontSize: 30 } },
      { x: 4.60, y: -0.99, text: '•', style: { fontSize: 30 } },



    ],
    lines: [
      {
        typeCurve: 'line',

        strokeWidth: 1,
        dash:1,
        points: [
          [0.8, 0],
          [0.8, 1.6],
        ],
      },

      {
        typeCurve: 'line',
        strokeWidth: 1,
        dash:1,


        points: [
          [1.58, 1.56],
          [0.8, 1.56],
        ],
      },

      {
        typeCurve: 'line',

        dash:1,

        strokeWidth: 1,
        points: [
          [1.56, 1],
          [1.56, 1.55],
        ],
      },

      {
        typeCurve: 'line',
        dash:1,

        strokeWidth: 1,

        points: [
          [1.5, 1],
          [0.8, 1],
        ],
      },
    ]


  },

};

const rDef = {
  artifactHtml: {
    datadefault: [
      {
        type: 10, // tipo
        classGlobal: 'defRoad',
        contents: [
          // { dataSet: { board: 'board_0' } },

        ],
      },

    ],
  },
  artifact_1: {
    /* enumTop: '(x)+(x)',
      enumBottom: '(x)-(x)', */
    numberBoard: '',
    conditions: {
      road: {
        curveReflex: [{ curve: { index: 1 }, }],
        points: [
          { forks: [[[-2, 0], [-2, -4], [-4, -4], [-4, 0.76], [-2, 0.76]]] },
          { forks: [[[-1.4, 0], [-1.4, -2.80], [-2.80, -2.80], [-2.80, -0.33], [-1.40, -0.33]]] },
          { forks: [[[-1, 0], [-1, -2], [-2, -2], [-2, -0.91], [-1, -0.91]]] },
          { forks: [[[0, 0]]] },
          { forks: [[[1, 0], [1, 2], [2, 2], [2, 0.91], [1, 0.91]]] },
          { forks: [[[1.5, 0], [1.5, 3], [3, 3], [3, 0.14], [1.5, 0.14]]] },


          { forks: [[[1.6, 0], [1.6, 3.2], [3.2, 3.2], [3.20, -0.0584], [1.6, -0.0584]]] },
          { forks: [[[2, 0], [2, 4], [4, 4], [4, -0.76], [2, -0.76]]] }
        ],



      },
    },
  },



};



const quizDef = {
  artifact_2: {
    quizType: 'standard',
    rendering: 'rendering_1',
    //  config: "procedural",
    //  title: "Hola Mundo",
    keyBoardProfile: ['numeric'],
    quiz: {
      generalLayout: '',
      formsQuestions: [
        {
          layout: 'vertical',
          nodes:
            [

              {
                type: 'radio',
                data: {
                  label: `¿El rango de 
                            <math ><mrow><mrow><mi>sin</mi><mo>⁡</mo></mrow><mrow><mo fence="true" form="prefix">(</mo><mn>2</mn><mrow><mo fence="true" form="prefix">(</mo><mo fence="true" form="postfix">)</mo></mrow><mo fence="true" form="postfix">)</mo></mrow></mrow></math>es el mismo que el de <math >
  <mrow>
    <mrow>
      <mi>sin</mi>
      <mo>⁡</mo>
    </mrow>
    <mrow>
      <mo fence="true" form="prefix">(‎  </mo>
      <mo fence="true" form="postfix">‎ )</mo>
    </mrow>
  </mrow>
</math>?`,
                  condition: 0,
                  optionList:
                    [
                      'Sí',
                      'No'
                    ],
                  questionType: 'basic'

                }



              },

              {
                type: 'select',
                data: {
                  label: 'Señale la respuesta correcta sobre los parecidos que nota entra las curvas de Sin(2(‎ )) y Sin(‎ ).',
                  condition: 1,
                  optionList:
                    [
                      '',
                      'Ambas curvas alcanzan la misma altura.',
                      'La curva Sin(2x) se repite el doble de veces que la curva Sin(x) en el mismo espacio',
                      'La curva de Sin(2x) tiene el doble de altura que la curva de Sin(x).'
                    ],

                }



              },


              {
                type: 'select',
                data: {
                  label: 'Señale la respuesta correcta sobre la diferencia que nota entre las curvas de Sin(2(‎ )) y Sin(‎ )',
                  condition: 1,
                  optionList:
                    [
                      '',
                      'La función sin⁡(2𝑥)sin(2x) da dos vueltas completas mientras sin⁡(𝑥)sin(x) da solo una en el mismo espacio.',
                      'sin⁡(2𝑥)sin(2x) se refleja igual en ambos lados del eje, pero sin⁡(𝑥)sin(x) no lo hace.',
                      'Sin(2x) y Sin(x) son funciones trigonométricas completamente diferentes, sin ninguna relación entre ellas.'
                    ],

                }



              },



            ]
        },









      ],

    }



  },
}


generator(rDef);
roadMain(defBoards, rDef);


const quizGen = new QuizGenerator(quizDef)
quizGen.generateObject()