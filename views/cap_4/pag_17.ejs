<%- include(rutes+'/head.min.ejs'); %>
    <template id="template">
        <div id="artifact">
        </div>
    </template>

    <div class="containerNormal background-gray">
        <h3>Fórmulas y Curvas</h3>
        <hr>
        <br>
        <h3 class="superTitle"><strong>Valor Absoluto.</strong></h3>
        <br>
        <div class="note">
            <p>Hacer click en la elipses del diagrama para completar la gráfica</small> </p>
            </p>
        </div>
        <div class=" flexGrid">
            <div class="itemContenFlex marginTop-2 marginBottom-2">
                <div id="globalContainer" class="">
                    <div id="mainArtifact" style="max-width: 1200px" class="d-flex justify-content-center">
                        <div id="contenedor" class="mainContent justify-content-start"></div>
                    </div>
                </div>
            </div>
            <div id="rendering_1" class="itemContenFlex marginTop-2 marginBottom-2"></div>
        </div>

        <br>
        <br>
        <div class="flexGrid itemContenFlex marginBottom-2">
            <p class="infoText ">
                La tecla valor absoluto se denota con dos pequeñas barras verticales: ||<br>

                Las instrucciones que debería seguir una calculadora para transformar un número x en su valor absoluto,
                son las siguientes:<br><br>

                <span class="marginLeft-2">1) Si x es positivo o cero no cambiar el número.</span><br>

                <span class="marginLeft-2">2) Si x es negativo cambiar el signo del número.</span><br><br>

                De estos hechos se ve que el valor absoluto nunca puede ser un número negativo.<br>

                Para trazar la curva, comience por marcar los puntos que corresponden a las verticales numeradas
            </p>
        </div>
        <div class="alphabetEngine centerElement" data-artifact="artifact_2" data-board="board_1">
        </div>
        <br>
        <br>
        <br>
        <p class="infoText centerText marginTop-2 marginBottom-2">Complete:</p>
        <div id="rendering_2" class="centerText marginTop-2 marginBottom-2"
            style="display: flex; justify-content: center;"></div>
        <div class="flexGrid">
            <div id="rendering_3" class="centerText" style="display: flex; justify-content: center;"></div>
            <div id="rendering_4" class="centerText" style="display: flex; justify-content: center;"></div>
            <div id="rendering_5" class="centerText" style="display: flex; justify-content: center;"></div>


        </div>
    </div>

    <template id="tmp-alphabet">
        <div class="alphabetEngineContainer">
            <div class="alphabetEngine__notification transitionNotification" data-show="false">
                <!-- Selección de franjas inadecuada -->
            </div>

            <div class="alphabetEngine__Board" id="boad1" data-board="board_" data-artifact="artifact_"></div>
            <div class="alphabetEngine__questions">
                <div class="alphabetEngine__diagram">
                    <div class="alphabetEngine__rounded roundedPositionTop">
                        <math-field readonly class="alphabetEngine__rounded-math-field"></math-field>
                    </div>
                    <div class="alphabetEngine__square">
                        <math-field readonly class="alphabetEngine__square-math-field"></math-field>
                    </div>
                    <div class="arrowDown arrowDown--cap4"></div>
                    <div class="alphabetEngine__rounded roundedPositionBottom">
                        <math-field class="alphabetEngine__rounded-math-field" readonly></math-field>
                    </div>
                </div>

                <div class="alphabetEngine__btnsPars">
                    <div class="alphabetEngine__ordenatePars">
                        <div class="alphabetEngine__ordenatePar-input">
                            <span class="textOrdenatePar">(</span><math-field readonly
                                class="alphabetEngine__ordenatePar-mathfield" data-par="x">x</math-field>
                            <spa class="textOrdenatePar">,</spa>
                            <math-field readonly class="alphabetEngine__ordenatePar-mathfield"
                                data-par="y">y</math-field><span class="textOrdenatePar">)</span>
                        </div>
                    </div>
                    <div class="alphabetEngine__createPars">
                        <button class="createPointBtn">crear punto</button>
                    </div>
                </div>
            </div>
            <div class="alphabetEngine__btnContainer btn-all">
                <div class="alphabetEngine__Otherbtn"></div>
                <div>
                    <button class="help-btn button-marg buttonSecundary buttonKey d-none">
                    </button>
                    <button class="reset button-marg buttonSecundary buttonKey"></button>
                    <button class="check button-marg buttonPrimary buttonKey"></button>
                </div>
            </div>
        </div>
    </template>
    <%- include(rutes+'/bodyClose.min.ejs'); %>