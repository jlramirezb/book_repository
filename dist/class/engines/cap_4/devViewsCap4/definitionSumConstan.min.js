function _typeof(o){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o})(o)}function _defineProperty(o,t,e){return(t=_toPropertyKey(t))in o?Object.defineProperty(o,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):o[t]=e,o}function _toPropertyKey(o){o=_toPrimitive(o,"string");return"symbol"==_typeof(o)?o:o+""}function _toPrimitive(o,t){if("object"!=_typeof(o)||!o)return o;var e=o[Symbol.toPrimitive];if(void 0===e)return("string"===t?String:Number)(o);e=e.call(o,t||"default");if("object"!=_typeof(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}var defBoards={board_1:{style:_defineProperty(_defineProperty({axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],yp:[-1,1,2,3],yv:["-1","1","2","3"],xd:[[0,0],[1,0]],colory:"#4f4f4f",colorx:"#4f4f4f"},grid:!0},"grid",{style:"#bfbaba"}),"boundingbox",[-4,4,4,-4]),expressionCurve:"sin(x)",alphabet:{entera:{point:{coord:[0,1],visible:!0},keyCurve:"floor(x)",options:{strokeColor:"#7f7879",strokeWidth:2}},identidad:{point:{coord:[0,0],visible:!0},keyCurve:"x",options:{strokeColor:"#7f7879",strokeWidth:2}},identidadNegativa:{point:{coord:[0,1],visible:!0},keyCurve:"-x",options:{strokeColor:"#7f7879",strokeWidth:2}},inversaNumerica:{point:{coord:[0,1],visible:!0},keyCurve:"x^(-1)",options:{strokeColor:"#7f7879",strokeWidth:2}},alCuadrado:{point:{coord:[0,1],visible:!0},keyCurve:"x^(2)",options:{strokeColor:"#7f7879",strokeWidth:2}},sin:{point:{coord:[0,0],visible:!1},keyCurve:"sin(x)",options:{},interval:[]}},asymptotes:[{x:-1.5},{x:1.5}]},board_2:{style:{axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],yp:[-1,1,2,3],yv:["-1","1","2","3"],xd:[[0,0],[1,0]],colory:"#4f4f4f",colorx:"#4f4f4f",gridColor:"red"},grid:{style:"#bfbaba"},boundingbox:[-5,5,5,-5]},alphabet:{sin:{point:{coord:[0,0],visible:!1},keyCurve:"sin(x)",options:{},interval:[]},identidad:{point:{coord:[0,0],visible:!1},keyCurve:"x",options:{strokeColor:"#7f7879",strokeWidth:2}},constante:{point:{coord:[0,1],visible:!0},keyCurve:"1",options:{},interval:[]},identidadNegativa:{point:{coord:[0,1],visible:!1},keyCurve:"-x",options:{strokeColor:"#7f7879",strokeWidth:2}}}}},def={artifact_1:{curveCount:2,showCurveButton:!0,instructionText:{text:"y=1+\\frac{1}{x}",styleClass:["ejemplo"]},conditions:{sumConstant:{mathCurves:[{curve:"x",pointY:2,noise:1},{curve:"-x",pointY:2,noise:1}]}}},artifact_2:{curveCount:2,instructionText:{text:"f(x)=\\exponentialE^{x}\\cdot\\sin\\left(x\\right)"},conditions:{multiplyCurves:["x^(-1)","x^(2)"],asymptotes:[{x:-1,y:-1},{x:-2,y:-2},{x:-3,y:-3}]}},artifact_3:{curveCount:2,visibleAsyntote:!0,instructionText:{text:"-\\sin\\left(x\\right)"},conditions:{defaultCurve:"-1",multiplyCurves:["sin(x)"],asymptotes:[{x:-1,y:-1}]}}};console.log(new GenerateSumConstant(def,defBoards));