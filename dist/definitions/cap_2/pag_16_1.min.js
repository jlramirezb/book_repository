function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ownKeys(o,t){var e,r=Object.keys(o);return Object.getOwnPropertySymbols&&(e=Object.getOwnPropertySymbols(o),t&&(e=e.filter(function(t){return Object.getOwnPropertyDescriptor(o,t).enumerable})),r.push.apply(r,e)),r}function _objectSpread(o){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(e),!0).forEach(function(t){_defineProperty(o,t,e[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(e)):ownKeys(Object(e)).forEach(function(t){Object.defineProperty(o,t,Object.getOwnPropertyDescriptor(e,t))})}return o}function _defineProperty(t,o,e){return(o=_toPropertyKey(o))in t?Object.defineProperty(t,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[o]=e,t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"==_typeof(t)?t:t+""}function _toPrimitive(t,o){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===o?String:Number)(t);e=e.call(t,o||"default");if("object"!=_typeof(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}var genericStyles={grid:!0,maxHeight:300,maxWidth:300,axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]}},defBoards={board_1:{artifact:"artifact_1",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.25,1.25,1.25,-.25]}),points:[[.5,.56,!1,"ƒ"],[.5,.18,!1,"g"],[.01,1,!1,"1"]],lines:[{points:[[0,1],[1,1]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],[1,1]],strokeColor:"darkorange"},{points:[[0,0],[1,.5]],strokeColor:"purple"}]},board_2:{artifact:"artifact_2",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.5,2.5,2.5,-.5]}),points:[[1,1.16,!1,"ƒ"],[1,.38,!1,"g"],[.02,2,!1,"2"]],lines:[{points:[[0,2],[2,2]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],[2,2]],strokeColor:"darkorange"},{points:[[0,0],[2,1]],strokeColor:"purple"}]},board_3:{artifact:"artifact_3",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.15,4,4,-.15],grid:!1}),points:[[1.4,1.5,!1,"ƒ"],[1.6,.9,!1,"g"],[.1,3,!1,"0.5"]],lines:[{points:[[0,3],[3,3]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],[3,3]],strokeColor:"darkorange"},{points:[[0,0],[3,1.5]],strokeColor:"purple"}]},board_4:{artifact:"artifact_4",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.5,1.5,1.5,-.5]}),points:[[.47,.52,!1,"ƒ"],[.78,.41,!1,"g"],{x:.01,y:1,name:"1"}],lines:[{points:[[0,1],[1,1]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],{x:1,y:1}],strokeColor:"purple"},{points:[[0,0],[.77,.52,!1],[1,1]],strokeColor:"darkorange"}]},board_5:{artifact:"artifact_5",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-1,5,3,-1]}),points:[[1.32,1.45,!1,"ƒ"],[1.74,.95,!1,"g"],{x:.02,y:2,name:"2"}],lines:[{points:[[0,2],[2,2]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],{x:2,y:2}],strokeColor:"purple"},{points:[[0,0],[1.48,.83],[2,2]],strokeColor:"darkorange"}]},board_6:{artifact:"artifact_6",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.15,4,4,-.15],grid:!1}),points:[[1.4,1.5,!1,"ƒ"],[1.6,.9,!1,"g"],[.3,3,!1,"0.5"]],lines:[{points:[[0,3],[3,3]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],{x:3,y:3}],strokeColor:"purple"},{points:[[0,0],[2,1,!1],[3,3]],strokeColor:"darkorange"}]},board_7:{artifact:"artifact_7",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.5,1.5,1.5,-.5]}),points:[[.5,.6,!1,"ƒ"],[.01,1,!1,"1"]],lines:[{points:[[0,1],[1,1]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],[1.01,1.01]],strokeColor:"purple"},{points:[[0,0],[1.01,1.01]],strokeColor:"darkorange"}]},board_8:{artifact:"artifact_8",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-1,4.5,3,-1]}),points:[[1,.7,!1,"ƒ"],[.01,1,!1,"1"]],lines:[{points:[[0,1],[1,1]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],[2,2]],strokeColor:"purple"},{points:[[0,0],[2,2]],strokeColor:"darkorange"}]},board_9:{artifact:"artifact_9",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-.3,5,3,-.3]}),points:[[1,.7,!1,"ƒ"],[.02,2,!1,"2"]],lines:[{points:[[0,2],[2,2]],lastArrow:!0,dash:2}],curves:[{points:[[0,0],[2.02,2.02]],strokeColor:"purple"},{points:[[0,0],[2.02,2.02]],strokeColor:"darkorange"}]}},rDef={artifactHtml:{datadefault:[[1,"Grafique el producto en cada uno de los recuadros. (En algunos casos deberá considerar más de tres verticales)."],{type:10,classGlobal:"operationCurves",contents:[{dataSet:{board:"board_1"}},{dataSet:{board:"board_2"}},{dataSet:{board:"board_3"}},{dataSet:{board:"board_4"}},{dataSet:{board:"board_5"}},{dataSet:{board:"board_6"}}]},[1,"Grafique ƒ²"],{type:10,classGlobal:"operationCurves",contents:[{dataSet:{board:"board_7"}},{dataSet:{board:"board_8"}},{dataSet:{board:"board_9"}}]}]},artifact_1:{buttonsActive:{points:!0},conditions:{reciprocalCurves:{text:"El producto no es correcto",curves:[{mode:!0,points:[[0,0],[.5,.12],[1,.5]]}]}}},artifact_2:{buttonsActive:{points:!0},conditions:{operation:{curves:[[0,1]],type:2,noise:15}}},artifact_3:{buttonsActive:{points:!0},conditions:{minPoints:4,reciprocalCurves:{text:"El producto no es correcto",curves:[{mode:!0,points:[[.010598120777462363,.00101693399977836],[1.6311790969566817,.18351462384327072],[3.003562005277047,.7529077636849594]]}]}}},artifact_4:{buttonsActive:{points:!0},conditions:{operation:{curves:[[0,1]],type:2,noise:32}}},artifact_5:{buttonsActive:{points:!0},conditions:{operation:{curves:[[0,1]],type:2,noise:15}}},artifact_6:{buttonsActive:{points:!0},conditions:{minPoints:3,reciprocalCurves:{text:"El producto no es correcto",curves:[{mode:!0,points:[[0,0],[1.88,.31],[3,1.5]]}]}}},artifact_7:{buttonsActive:{points:!0},conditions:{operation:{curves:[[0,1]],type:2,noise:35}}},artifact_8:{buttonsActive:{points:!0},conditions:{operation:{curves:[[0,1]],type:2,noise:15}}},artifact_9:{buttonsActive:{points:!0},conditions:{operation:{curves:[[0,1]],type:2}}}};generator(rDef),mainOperation(defBoards,rDef);