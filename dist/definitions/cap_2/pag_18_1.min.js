function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys(o,e){var t,r=Object.keys(o);return Object.getOwnPropertySymbols&&(t=Object.getOwnPropertySymbols(o),e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable})),r.push.apply(r,t)),r}function _objectSpread(o){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(t),!0).forEach(function(e){_defineProperty(o,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(t,e))})}return o}function _defineProperty(e,o,t){return(o=_toPropertyKey(o))in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,o){if("object"!=_typeof(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0===t)return("string"===o?String:Number)(e);t=t.call(e,o||"default");if("object"!=_typeof(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}var genericStyles={grid:!0,axis:[!1,!0,!0],boundingbox:[-1,3,4,-3],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]}},allDef={buttonsActive:{points:!0},conditions:{operation:{minPoints:3,curves:[[0,1]],type:2,noise:25}}},defBoards={board_0:{style:{grid:!0,maxHeight:350,maxWidth:500,boundingbox:[-1,3,10,-3],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]},curveType:2},points:[[0,2,!0,"2",null,"black"],[0,1,!0,"1",null,"black"],[0,-1,!0,"-1",null,"black"],[0,-2,!0,"",null,"black"],[.5,1,!1,"+"],[1.5,1,!1,"+"],[2.5,1,!1,"+"],[5,1.5,!1,"+"],[7.5,2.1,!1,"+"],[8,.5,!1,"+"],[9,2,!1,"+"],[.5,-1,!1,"-"],[5,-1,!1,"-"],[9,-1,!1,"-"]],curves:[[[[0,0],[1.5,1],[4.5,-1],[7.5,1],[9.2,-.33]],null,null,0],[[[-.3,-1.8],[0,-1],[1,0],[3,.8],[6,1.6],[7.5,1.9],[9.2,2]],null,null,1]],lines:[[[[0,-6],[0,6]],2],[[[1,-6],[1,6]],2],[[[3,-6],[3,6]],2],[[[6,-6],[6,6]],2],[[[8.8,-6],[8.8,6]],2]]},board_1:{artifact:"artifact_1",style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-1,4,10,-4],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]}},points:[{x:0,y:2,visible:!0,name:"2",fixed:!0,color:"black"},{x:0,y:1,visible:!0,name:"1",fixed:!0,color:"black"},{x:0,y:-1,visible:!0,name:"-1",fixed:!0,color:"black"}],curves:[{interactive:!0,strokeColor:"purple",points:[[0,0],[1.5,1],[4.5,-1],[7.5,1],[9.2,-.33]]},{interactive:!0,strokeColor:"darkorange",flex:0,points:[[0,2],[10,2]]}]},board_2:{artifact:"artifact_2",style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-1,4,10,-4],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]}},points:[{x:0,y:2,visible:!0,name:"2",fixed:!0,color:"black"},{x:0,y:1,visible:!0,name:"1",fixed:!0,color:"black"},{x:0,y:-1,visible:!0,name:"-1",fixed:!0,color:"black"},{x:0,y:-2,visible:!0,name:"-2",fixed:!0,color:"black"}],curves:[{interactive:!0,strokeColor:"purple",points:[[0,0],[1.5,1],[4.5,-1],[7.5,1],[9.2,-.33]]},{interactive:!0,strokeColor:"darkorange",flex:0,points:[[0,-2],[10,-2]]}]},board_3:{artifact:"artifact_3",style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-1,4,10,-2],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]}},points:[{x:0,y:1,visible:!0,name:"1",fixed:!0,color:"black"}],curves:[{interactive:!0,strokeColor:"purple",points:[[0,0],[1.5,1],[4.5,-1],[7.5,1],[9.2,-.33]]},{interactive:!0,strokeColor:"darkorange",flex:1,points:[[0,.17],[4.33,.48],[5.58,1.43],[6.9,2.38],[9.25,3]]}]},board_4:{artifact:"artifact_4",style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-1,7,8,-1],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]]}},curves:[{interactive:!0,strokeColor:"purple",points:[[1.8,4],[2.5,1],[4,-0],[5.5,1],[6.2,4]]},{interactive:!0,strokeColor:"darkorange",flex:1,points:[[1,4],[2,1],[4,-0],[6,1],[7,4]]}],points:[{x:0,y:1,visible:!0,name:"1",fixed:!0,color:"black"}]},board_5:{artifact:"artifact_5",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-1,3,10,-3]}),points:[{x:0,y:2,visible:!0,name:"2",fixed:!0,color:"black"},{x:0,y:1,visible:!0,name:"1",fixed:!0,color:"black"},{x:0,y:-1,visible:!0,name:"-1",fixed:!0,color:"black"}],curves:[{interactive:!0,strokeColor:"purple",points:[[0,0],[1.5,1],[4.5,-1],[7.5,1],[9.2,-.33]]},{interactive:!0,strokeColor:"darkorange",points:[[0,-1],[10,-1]]}]},board_6:{artifact:"artifact_6",style:_objectSpread(_objectSpread({},genericStyles),{},{boundingbox:[-1,3,10,-3]}),points:[{x:0,y:2,visible:!0,name:"2",fixed:!0,color:"black"},{x:0,y:1,visible:!0,name:"1",fixed:!0,color:"black"},{x:0,y:-1,visible:!0,name:"-1",fixed:!0,color:"black"},{x:2,y:2,visible:!1,name:"ƒ * ƒ",fixed:!0,color:"black"}],curves:[{interactive:!0,strokeColor:"darkorange",points:[[0,0],[1.5,1],[4.5,-1],[7.5,1],[9.2,-.33]]},{interactive:!0,strokeColor:"purple",points:[[0,0],[1.5,1,!1,"ƒ",null,null,null,20],[4.5,-1],[7.5,1],[9.2,-.33]]}]}},rDef={artifactHtml:{datadefault:[[1,"Observe atentamente la figura siguiente:"],{type:10,classGlobal:"defBoard productR",contents:[{dataSet:{board:"board_0"}}]},[1,'Las verticales punteadas pasan por los puntos de corte con el eje x (note que hay una que no se ve porque\nestá confundida con el eje y). Estas rectas se ponen para ayudar a ver los signos de los trozos de curvas que\nquedan entre ellas. Donde la curva está por encima del eje x, la curva "es positiva" y por ello se pone el\nsigno más. Se hace lo análogo con las partes que están por debajo del eje x. Esto sirve, usando la regla de\nlos signos (+ por + = +, - por + = - etc), para saber el signo de la curva producto entre dos cortes\nconsecutivos con el eje x.'],[1,"Complete usted la figura dibujando un esbozo de la curva producto. La curva deberá pasar por los puntos de\ncorte de las curvas factores con el eje x. \n   La curva deberá tener los signos que resultan de la regla de los\nsignos. Además, usted al trazarla, debe tomar en cuenta los puntos de altura 1 de las curvas factores y las\nmagnitudes aproximadas de las alturas de dichas curvas en puntos máximos o mínimos."],[1," Procediendo de manera similar a como se ha hecho en el modelo que se acaba de explicar, es decir:\n         verticales por los puntos de corte, signos de las curvas factores, ...etc, grafique las curvas productos."],{type:10,classGlobal:"operationCurves",contents:[{dataSet:{board:"board_1"}},{dataSet:{board:"board_2"}},{dataSet:{board:"board_3"}},{dataSet:{board:"board_4"}},{dataSet:{board:"board_5"}},{dataSet:{board:"board_6"}}]}]},artifact_1:{accuracy:1,buttonsActive:{points:!0},conditions:{operation:{minPoints:5,curves:[[0,1]],type:2,noise:25}}},artifact_2:{buttonsActive:{points:!0},accuracy:1,conditions:{operation:{minPoints:5,curves:[[0,1]],type:2,noise:25}}},artifact_3:{accuracy:1,buttonsActive:{points:!0},conditions:{operation:{minPoints:4,curves:[[0,1]],type:2,noise:25}}},artifact_4:{buttonsActive:{points:!0},conditions:{operation:{minPoints:3,curves:[[0,1]],type:2,noise:50}}},artifact_5:{accuracy:1,buttonsActive:{points:!0},conditions:{operation:{minPoints:5,curves:[[0,1]],type:2,noise:25}}},artifact_6:{buttonsActive:{points:!0},conditions:{operation:{minPoints:7,curves:[[0,1]],type:2,noise:25}}}};generator(rDef),mainOperation(defBoards,rDef),defBoardDefault();