function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){var t;if(e)return"string"==typeof e?_arrayLikeToArray(e,r):"Map"===(t="Object"===(t={}.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:t)||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,o=Array(r);t<r;t++)o[t]=e[t];return o}function ownKeys(r,e){var t,o=Object.keys(r);return Object.getOwnPropertySymbols&&(t=Object.getOwnPropertySymbols(r),e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),o.push.apply(o,t)),o}function _objectSpread(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(t),!0).forEach(function(e){_defineProperty(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}function _defineProperty(e,r,t){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,r){if("object"!=_typeof(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0===t)return("string"===r?String:Number)(e);t=t.call(e,r||"default");if("object"!=_typeof(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}var defOne={style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-4,4,4,-4],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]],colory:"#000000",colorx:"#000000"}},curves:[{typeCurve:"curve",name:{text:"g",x:1.4,y:3.6},strokeColor:"darkorange",interactive:!0,form:0,points:[[-3.3,-1.3],[1.3,3.3]]},{typeCurve:"curve",strokeColor:"purple",name:{text:"f",x:2.2,y:.6},interactive:!0,form:1,points:[[1,0],[1.4,.7],,[2,1],[2.65,.7],[3,0]]}],lines:[{typeCurve:"bisectriz",points:[[-8,-8],[8,8]],interactive:!0}],points:[{x:-3,y:0,visible:!0,interactive:!0},{x:-2,y:0,visible:!0,interactive:!0},{x:-1,y:0,visible:!0,interactive:!0},{x:0,y:0,visible:!0,interactive:!0},{x:1,y:0,visible:!0,interactive:!0},{x:2,y:0,visible:!0,interactive:!0},{x:3,y:0,visible:!0,interactive:!0},{x:3.3,y:0,visible:!0,interactive:!0}]},two={style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-4,4,4,-4],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]],colory:"#000000",colorx:"#000000"}},curves:[{strokeColor:"purple",name:{text:"f",x:1.4,y:3.6},typeCurve:"curve",interactive:!0,points:[[-3,-.9],[-1,0],[0,.8],[1,2],[1.54,3]]},{strokeColor:"darkorange",name:{text:"g",x:3.3,y:1.6},typeCurve:"curve",interactive:!0,points:[[-.9,-3],[0,-1],[.8,0],[2,1],[3,1.52]]}],lines:[{typeCurve:"bisectriz",points:[[-8,-8],[8,8]],interactive:!0}],points:[{x:-3,y:0,visible:!0,interactive:!0},{x:-2,y:0,visible:!0,interactive:!0},{x:-1,y:0,visible:!0,interactive:!0},{x:0,y:0,visible:!0,interactive:!0},{x:1,y:0,visible:!0,interactive:!0},{x:2,y:0,visible:!0,interactive:!0},{x:3,y:0,visible:!0,interactive:!0},{x:3.3,y:0,visible:!0,interactive:!0}]},defBoards={board_0:_objectSpread(_objectSpread({artifact:"artifact_1"},defOne),{},{curves:[].concat(_toConsumableArray(defOne.curves),[{addToObjet:{useIntersection:!1},layer:9,visible:!1,strokeColor:"green",points:[[-1,0],[-.65,.7],[0,1],[.65,.7],[1,0]]}])}),board_1:_objectSpread(_objectSpread({artifact:"artifact_2"},defOne),{},{curves:[].concat(_toConsumableArray(defOne.curves),[{addToObjet:{useIntersection:!1},visible:!1,strokeColor:"green",points:[[1,1],[1.35,1.7],[2,2],[2.65,1.7],[3,1]]}])}),board_2:_objectSpread(_objectSpread({artifact:"artifact_3"},two),{},{curves:[].concat(_toConsumableArray(two.curves),[{addToObjet:{useIntersection:!1},layer:9,visible:!1,strokeColor:"green",points:[[0,0],[3,3]]}])}),board_3:_objectSpread(_objectSpread({artifact:"artifact_4"},two),{},{curves:[].concat(_toConsumableArray(two.curves),[{addToObjet:{useIntersection:!1},layer:9,visible:!1,strokeColor:"green",points:[[-1,-1],[2,2]]}])}),board_4:{artifact:"artifact_5",style:{grid:!0,maxHeight:300,maxWidth:300,boundingbox:[-4,4,4,-4],axis:[!1,!0,!0],valueAxis:{yd:[[0,0],[0,1]],xd:[[0,0],[1,0]],colory:"#000000",colorx:"#000000"}},curves:[{typeCurve:"curve",interactive:!0,form:0,points:[[-2.58,.28],[2.15,1.25],[2.65,1.75],[2.7,2.25]]}],lines:[{typeCurve:"bisectriz",name:{text:"f",x:3,y:1},points:[[-8,-8],[8,8]],interactive:!0}]}},rDef={artifact_1:{numberBoard:"1",enumTop:"f(g( ))",buttonsActive:{points:!0},conditions:{road:{curveReflex:[{curve:{index:2}}],points:[{forks:[[[-3,0]]]},{forks:[[[-2,0]]]},{forks:[[[-1,0],[-1,1],[1,1],[1,0],[-1,0]]]},{forks:[[[0,0],[0,2],[2,2],[2,1],[0,1]]]},{forks:[[[1,0],[1,3],[3,3],[3,0],[1,0]]]},{forks:[[[2,0]]]},{forks:[[[3,0]]]},{forks:[[[3.3,0]]]}]}}},artifact_2:{enumTop:"g(f( ))",numberBoard:"2",conditions:{road:{curveReflex:[{curve:{index:2}}],points:[{forks:[[[-3,0]]]},{forks:[[[-2,0]]]},{forks:[[[-1,0]]]},{forks:[[[0,0]]]},{forks:[[[1,0],[0,0],[0,2],[1,2]]]},{forks:[[[2,0],[2,1],[1,1],[1,3],[2,3]]]},{forks:[[[3,0],[0,0],[0,2],[3,2]]]},{forks:[[[3.3,0]]]}]}}},artifact_3:{enumTop:"f(g( ))",numberBoard:"3",conditions:{road:{curveReflex:[{curve:{index:2}}],points:[{forks:[[[-3,0]]]},{forks:[[[-2,0]]]},{forks:[[[-1,0]]]},{forks:[[[0,0],[0,-1],[-1,-1],[-1,0],[0,0]]]},{forks:[[[1,0],[1,.2],[.2,.2],[.2,1],[1,1]]]},{forks:[[[2,0],[2,1],[1,1],[1,2],[2,2]]]},{forks:[[[3,0],[3,1.52],[1.52,1.52],[1.52,3],[3,3]]]},{forks:[[[3.3,0]]]}]}}},artifact_4:{enumTop:" g(f())",numberBoard:"4",conditions:{road:{points:[{forks:[[[-3,0],[-3,-1],[-1,-1],[-.97,-3.01],[-3,-3]]]},{forks:[[[-2,0],[-2,-.5],[-.51,-.51],[-.51,-2],[-2,-2]]]},{forks:[[[-1,0],[0,0],[0,-1],[-1,-1]]]},{forks:[[[0,0],[0,1],[.8,.8],[.8,0],[0,0]]]},{forks:[[[1,0],[1,2],[2,2],[2,1],[1,1]]]},{forks:[[[2,0]]]},{forks:[[[3,0]]]},{forks:[[[3.3,0]]]}]}}},artifact_5:{numberBoard:"5",buttonsActive:{config:!1,asymptotes:!1},conditions:{reciprocalCurves:{curves:[{mode:!0,points:[[.28,-2.58],[1.25,2.15],[1.75,2.65],[2.25,2.7]]}]}}}},newrDef={artifactHtml:{datadefault:[{type:10,classGlobal:"defRoad",contents:[{dataSet:{board:"board_0"}},{dataSet:{board:"board_1"}},{dataSet:{board:"board_2"}},{dataSet:{board:"board_3"}}]},[1,"En este recuadro grafique la curva g tal que la curva g(ƒ()) sea la bisectriz."],{type:10,classGlobal:"operationCurves",contents:[{dataSet:{board:"board_4"}}]},{type:11,classGlobal:"QA",parent:"#oneContainer",contents:{artifact_6:{allinputs:[],dataInteraction:{incorrect:0,correct:0},questions:[{type:1,question:"¿En los recuadros 1 y 2 las curvas son las mismas?",answers_values:["Sí","No"],conditions:{correctIndex:"Sí"}},{type:1,question:"¿En los cuadros 1 y 2 las curvas compuestas resultaron ser las mismas?",answers_values:["Sí","No"],conditions:{correctIndex:"No"}},{type:1,question:"¿Es importante el orden de composición?.",answers_values:["Sí","No"],conditions:{correctIndex:"Sí"}},{type:1,question:"¿En los cuadros 3 y 4, el orden de composición influye en la curva resultante?",answers_values:["Sí","No"],conditions:{correctIndex:"No"}}]}}}]}};generator(newrDef),mainOperation(defBoards,rDef),roadMain(defBoards,rDef);